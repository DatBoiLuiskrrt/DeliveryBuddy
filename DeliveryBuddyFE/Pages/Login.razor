@page "/login"
@using System.Net.Http.Json
@using Microsoft.AspNetCore.Http.Extensions;
@inject IHttpClientFactory factory
@inject TokenModel tokenInfo
@inject NavigationManager NavManager;
<PageTitle>Index</PageTitle>

@if (isLoggedIn)
{
    @*NavigationManager.NavigateTo("/Locations", false);*@
    NavManager.NavigateTo("/Locations");
    @*<h1>Logged In</h1>
    <button class="btn btn-danger" @onclick="LogOut">Log Out</button>*@
}
else
{
    //OnValidSubmit
    <h1>Please Log In</h1>
    <EditForm Model="login" OnValidSubmit="HandleValidSubmit">
        <InputText @bind-Value="login.UserName" />
        <InputText type="password" @bind-Value="login.Password" />
        <button class="btn btn-success" type="submit">Log In</button>
    </EditForm>
}

@code {
    private AuthenticationModel login = new();
    private bool isLoggedIn = false;

    protected override void OnInitialized()
    {
        isLoggedIn = !string.IsNullOrEmpty(tokenInfo.Token);
    }

    private async void HandleValidSubmit()
    {
        var client = factory.CreateClient("api");

        var info = await client.PostAsJsonAsync<AuthenticationModel>("Authentication/token", login);

        tokenInfo.Token = await info.Content.ReadAsStringAsync();
        isLoggedIn = true;
        await InvokeAsync(StateHasChanged);
        //let's blazor know to re-render the page.
    }

    private void LogOut()
    {
        tokenInfo.Token = "";
        isLoggedIn = false;
    }
}


